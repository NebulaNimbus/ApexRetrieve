services:
  ai_platform:
    image: ollama/ollama:latest
    container_name: ollama-container
    ports:
      - "11434:11434"
    volumes:
      - ollama-data:/root/.ollama/models
    networks:
      - rag-network

  vector_db:
    container_name: chromadb-container
    image: chromadb/chroma:latest
    ports:
      - "8000:8000"
    volumes:
      - chromadb-data:/chroma/data
    networks:
      - rag-network

  myragapp:
    container_name: api-container
    build:
      context: ./api
      dockerfile: Dockerfile
    ports:
      - "6050:6050"
    depends_on:
      - ai_platform
      - vector_db
    environment:
      OLLAMA_BASE_URL: ${OLLAMA_BASE_URL}
      CHROMA_HOST: ${CHROMA_HOST}
      CHROMA_PORT: ${CHROMA_PORT}
    networks:
      - rag-network

  mywebapp:
    container_name: webapp-container
    build:
      context: ./streamlit-webapp
      dockerfile: Dockerfile
    ports:
      - "7001:7001"
    depends_on:
      - ai_platform
      - vector_db
      - myragapp
    networks:
      - rag-network
  
  react-ui:
    container_name: react-ui-container
    build:
      context: ./react-ui # Path to your React app
      dockerfile: Dockerfile
    ports:
      - "3000:80" # Map host port 3000 to container port 80
    depends_on:
      - myragapp
    environment:
      REACT_APP_RAG_API_URL: http://localhost:6050/query
    networks:
      - rag-network

networks:
  rag-network:

volumes:
  ollama-data:
  chromadb-data: